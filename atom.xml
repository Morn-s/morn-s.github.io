<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xssong17.github.io</id>
    <title>xssong17</title>
    <updated>2025-01-12T14:13:13.791Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://xssong17.github.io"/>
    <link rel="self" href="https://xssong17.github.io/atom.xml"/>
    <subtitle>我等着，等着你</subtitle>
    <logo>https://xssong17.github.io/images/avatar.png</logo>
    <icon>https://xssong17.github.io/favicon.ico</icon>
    <rights>All rights reserved 2025, xssong17</rights>
    <entry>
        <title type="html"><![CDATA[webssh安装及使用（填坑中……）]]></title>
        <id>https://xssong17.github.io/post/webssh-an-zhuang-ji-shi-yong-tian-keng-zhong/</id>
        <link href="https://xssong17.github.io/post/webssh-an-zhuang-ji-shi-yong-tian-keng-zhong/">
        </link>
        <updated>2025-01-12T07:19:52.000Z</updated>
        <content type="html"><![CDATA[<p>待续</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[filebrowser安装及使用（填坑中……）]]></title>
        <id>https://xssong17.github.io/post/filebrowser-an-zhuang-ji-shi-yong-tian-keng-zhong/</id>
        <link href="https://xssong17.github.io/post/filebrowser-an-zhuang-ji-shi-yong-tian-keng-zhong/">
        </link>
        <updated>2025-01-12T07:18:45.000Z</updated>
        <content type="html"><![CDATA[<p>待续</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[clash-for-linux使用记录]]></title>
        <id>https://xssong17.github.io/post/clash-for-linux-shi-yong-ji-lu/</id>
        <link href="https://xssong17.github.io/post/clash-for-linux-shi-yong-ji-lu/">
        </link>
        <updated>2025-01-12T06:03:11.000Z</updated>
        <content type="html"><![CDATA[<h1 id="项目信息">项目信息</h1>
<p>https://github.com/Elegycloud/clash-for-linux-backup</p>
<h1 id="使用说明">使用说明</h1>
<h2 id="下载项目">下载项目</h2>
<pre><code>git clone https://github.com/Elegycloud/clash-for-linux-backup.git
</code></pre>
<h2 id="填写订阅地址">填写订阅地址</h2>
<p>进入到项目目录，编辑<code>.env</code>文件，修改变量<code>CLASH_URL</code>的值（订阅地址）。</p>
<pre><code class="language-bash">cd clash-for-linux
vim .env
</code></pre>
<h2 id="启动程序">启动程序</h2>
<p>赋予权限</p>
<pre><code>chmod +x start.sh
</code></pre>
<p>运行脚本文件<code>start.sh</code></p>
<pre><code class="language-bash">./start.sh
</code></pre>
<p>加载环境变量</p>
<pre><code>source /etc/profile
</code></pre>
<p>此时控制命令就已经通过环境变量的方式加载了。</p>
<h1 id="开启与关闭操作">开启与关闭操作</h1>
<p>开启代理</p>
<pre><code>proxy_on
</code></pre>
<p>关闭代理</p>
<pre><code>proxy_off
</code></pre>
<h1 id="卸载">卸载</h1>
<p>赋予权限</p>
<pre><code>chmod +x shutdown.sh
</code></pre>
<p>运行脚本文件<code>shutdown.sh</code></p>
<pre><code class="language-bash">./shutdown.sh
</code></pre>
<pre><code>proxy_off
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[napcat-docker安装过程记录]]></title>
        <id>https://xssong17.github.io/post/napcat-docker-an-zhuang-guo-cheng-ji-lu/</id>
        <link href="https://xssong17.github.io/post/napcat-docker-an-zhuang-guo-cheng-ji-lu/">
        </link>
        <updated>2025-01-12T05:50:30.000Z</updated>
        <content type="html"><![CDATA[<h1 id="项目信息">项目信息</h1>
<p>https://github.com/NapNeko/NapCat-Docker?tab=readme-ov-file</p>
<p>dockerhub: https://hub.docker.com/r/mlikiowa/napcat-docker/tags</p>
<h1 id="安装过程">安装过程</h1>
<h2 id="镜像拉取">镜像拉取</h2>
<pre><code>docker pull mlikiowa/napcat-docker:v4.3.3
</code></pre>
<p><code>可能出现网络问题，自行解决即可</code></p>
<h2 id="启动容器">启动容器</h2>
<p>启动docker</p>
<pre><code>docker run -d \
--network host \
-e NAPCAT_GID=$(id -g) \
-e NAPCAT_UID=$(id -u) \
-p 3000:3000 \
-p 3001:3001 \
-p 6099:6099 \
--name napcat \
--restart=always \
mlikiowa/napcat-docker:v4.3.3
</code></pre>
<p>镜像配置文件地址</p>
<p>https://doc.napneko.icu/use/integration</p>
<pre><code># 查看docker日志获取登录二维码及token
docker logs -f &lt;id&gt;

# webui配置，使用上面的token登录
http://192.168.1.70:6099/webui

# 添加websocket服务器
ws://0.0.0.0:3001


</code></pre>
<p>OneBot11配置</p>
<p>https://napcat.napneko.icu/config/basic#%E7%94%A8-webui-%E9%85%8D%E7%BD%AE</p>
<h1 id="其他">其他</h1>
<p>ubuntu <code>docker pull配置代理</code><br>
参考链接：https://neucrack.com/p/286</p>
<pre><code>mkdir -p /etc/systemd/system/docker.service.d
vim /etc/systemd/system/docker.service.d/http-proxy.conf
</code></pre>
<pre><code>[Service]
Environment=&quot;HTTP_PROXY=http://127.0.0.1:7890&quot;
Environment=&quot;HTTPS_PROXY=http://127.0.0.1:7890&quot;
</code></pre>
<pre><code>systemctl daemon-reload
systemctl restart docker
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hysteria2安装记录（未完待续）]]></title>
        <id>https://xssong17.github.io/post/hysteria2-an-zhuang-ji-lu/</id>
        <link href="https://xssong17.github.io/post/hysteria2-an-zhuang-ji-lu/">
        </link>
        <updated>2024-12-12T13:20:40.000Z</updated>
        <content type="html"><![CDATA[<h1 id="vps">vps</h1>
<p>vps购买来源：https://www.vpsgo.com/racknerd-bf-2024.html<br>
系统选择：AlmaLinux 8 64 位<br>
<code>防火墙一定一定要开放后续使用的端口！！！</code></p>
<h1 id="服务端">服务端</h1>
<h2 id="配置文件">配置文件</h2>
<pre><code>cat &lt;&lt; EOF &gt; /etc/hysteria/config.yaml
listen: :443 #监听端口

#有域名，使用CA证书 
#acme:
#  domains:
#    - test.heybro.bid #你的域名，需要先解析到服务器ip
#  email: augustdoit@gmail.com

#使用自签名证书
tls:
  cert: /etc/hysteria/server.crt
  key: /etc/hysteria/server.key

auth:
  type: password
  password: xxxxxxxxxxx

#伪装
masquerade:
  type: proxy
  proxy:
    url: https://bing.com/ #伪装网址
    rewriteHost: true
EOF
</code></pre>
<h1 id="客户端-linux">客户端-linux</h1>
<p>下载对应版本：https://github.com/apernet/hysteria/releases/tag/app%2Fv2.6.0<br>
后续命令根据下载的版本进行适当调整<br>
1、赋予权限</p>
<pre><code>chmod +x hysteria-linux-amd64
</code></pre>
<p>2、可执行文件同级目录下创建配置文件<code>config.yaml</code>，样例如下</p>
<pre><code>server: xxx.xx.xx.xx:443 #服务器:端口

auth: xxxxxx # 服务端配置的password

fastOpen : true
lazy : true

bandwidth:
  up: 20 mbps
  down: 90 mbps
  
tls:
  sni: bing.com
  insecure: true

socks5:
  listen: 127.0.0.1:19000
http:
  listen: 127.0.0.1:7890


</code></pre>
<p>3、启动服务</p>
<pre><code>./hysteria-linux-amd64
</code></pre>
<h1 id="安装脚本">安装脚本</h1>
<p><code>install.sh</code></p>
<pre><code>#!/bin/bash

# 添加环境变量(root权限)
cat&gt;/etc/profile.d/hysteria2.sh&lt;&lt;EOF
# 开启系统代理
proxy_on() {
	export http_proxy=http://127.0.0.1:7890
	export https_proxy=http://127.0.0.1:7890
	export no_proxy=127.0.0.1,localhost
    	export HTTP_PROXY=http://127.0.0.1:7890
    	export HTTPS_PROXY=http://127.0.0.1:7890
 	export NO_PROXY=127.0.0.1,localhost
	echo -e &quot;\033[32m[√] 已开启代理\033[0m&quot;
}

# 关闭系统代理
proxy_off(){
	unset http_proxy
	unset https_proxy
	unset no_proxy
  	unset HTTP_PROXY
	unset HTTPS_PROXY
	unset NO_PROXY
	echo -e &quot;\033[31m[×] 已关闭代理\033[0m&quot;
}
EOF

echo -e &quot;请执行以下命令加载环境变量: source /etc/profile.d/hysteria2.sh\n&quot;
echo -e &quot;请执行以下命令开启系统代理: proxy_on\n&quot;
echo -e &quot;若要临时关闭系统代理，请执行: proxy_off\n&quot;
</code></pre>
<p><code>uninstall.sh</code></p>
<pre><code>#!/bin/bash

# 关闭hysteria服务
PID_NUM=`ps -ef | grep [h]ysteria | wc -l`
PID=`ps -ef | grep [h]ysteria | awk '{print $2}'`
if [ $PID_NUM -ne 0 ]; then
	kill -9 $PID
fi

# 清除环境变量
&gt; /etc/profile.d/hysteria2.sh

echo -e &quot;\n服务关闭成功，请执行以下命令关闭系统代理：proxy_off\n&quot;

</code></pre>
<h1 id="客户端windows">客户端windows</h1>
<p>待续</p>
<h1 id="其他">其他</h1>
<p>screen 在AlmaLinux上的安装</p>
<pre><code>yum install epel-release
yum install screen
</code></pre>
<p>网络检查：<br>
Iperf3测速教程<br>
https://juejin.cn/post/7124583779851010085</p>
<p>参考资料：<br>
https://www.linuxmi.com/almalinux-centos.html<br>
https://augustdoit.men/Hysteria2/<br>
https://v2.hysteria.network/zh/docs/getting-started/Installation/</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[安卓11手机+非root+微信小程序抓包（vmos+HttpCanary）]]></title>
        <id>https://xssong17.github.io/post/an-zhuo-11-shou-ji-fei-rootwei-xin-xiao-cheng-xu-zhua-bao-vmoshttpcanary/</id>
        <link href="https://xssong17.github.io/post/an-zhuo-11-shou-ji-fei-rootwei-xin-xiao-cheng-xu-zhua-bao-vmoshttpcanary/">
        </link>
        <updated>2021-11-05T13:19:07.000Z</updated>
        <content type="html"><![CDATA[<h1 id="安卓11手机非root微信小程序抓包vmoshttpcanary">安卓11手机+非root+微信小程序抓包（vmos+HttpCanary）</h1>
<p>写在前面：</p>
<p>因为各种各样的原因，安卓抓包需要安装两个证书——用户证书、系统证书</p>
<p>但是，自从安卓几更新后（具体版本记不得了），系统证书的安装就必须root之后才能完成安装，为了不root（偷懒），因此找到了标题中的方式</p>
<h2 id="0x01-安装软件">0x01 安装软件</h2>
<p>安装以下清单中的软件</p>
<p>软件清单:</p>
<ul>
<li>
<p>VMOS Pro</p>
</li>
<li>
<p>HttpCanary</p>
</li>
<li>
<p>ES文件浏览器</p>
</li>
</ul>
<p>用途说明：</p>
<p>VMOS Pro：用于创建虚拟机</p>
<p>HttpCanary：抓包使用到的软件</p>
<p>ES文件浏览器：虚拟机中没有管理文件的软件，因此需要下载个实现该功能的软件用于虚拟机文件管理（其他拥有类似功能的软件都可）</p>
<p><em>以下地址均以失效</em><br>
下载地址：</p>
<p>VMOS Pro破解版：</p>
<p>http://112.74.58.65:83/#/s/zYcp</p>
<p>密码：unj6wc</p>
<p>HttpCanary破解版：</p>
<p>http://112.74.58.65:83/#/s/y7Uz</p>
<p>密码：4wqwyf</p>
<p>ES文件浏览器：自行下载</p>
<figure data-type="image" tabindex="1"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Screenshot_20211105-193820.jpg" alt="Screenshot_20211105-193820" loading="lazy"></figure>
<h2 id="0x02-配置环境">0x02 配置环境</h2>
<p>以下叙述会涉及到如下简称：</p>
<p>真机：当前你使用到的实体机</p>
<p>虚拟机：使用VMOS创建的虚拟机</p>
<p>小黄鸟：之前安装的抓包软件——HttpCanary</p>
<h3 id="step1-在真机中导出系统证书">step1 在真机中导出系统证书</h3>
<p>真机环境下：打开小黄鸟，按图示依次点击，导出系统证书，默认导出到目录是<code>/HttpCanary/cert/</code>，稍微眼熟下就行</p>
<p>1、点击目录</p>
<figure data-type="image" tabindex="2"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Snipaste_2021-11-05_20-39-41.png" alt="Snipaste_2021-11-05_20-39-41" loading="lazy"></figure>
<p>2、点击设置</p>
<figure data-type="image" tabindex="3"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Snipaste_2021-11-05_20-39-52.png" alt="Snipaste_2021-11-05_20-39-52" loading="lazy"></figure>
<p>3、点击SSL证书设置</p>
<figure data-type="image" tabindex="4"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Snipaste_2021-11-05_20-40-01.png" alt="Snipaste_2021-11-05_20-40-01" loading="lazy"></figure>
<p>4、选择导出证书，并选择系统证书</p>
<figure data-type="image" tabindex="5"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Snipaste_2021-11-05_20-40-17.png" alt="Snipaste_2021-11-05_20-40-17" loading="lazy"></figure>
<p>5、默认导出的文件所在位置</p>
<figure data-type="image" tabindex="6"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Snipaste_2021-11-05_20-44-21.png" alt="Snipaste_2021-11-05_20-44-21" loading="lazy"></figure>
<h3 id="step2-在虚拟机中导入系统证书以及必要软件">step2 在虚拟机中导入系统证书以及必要软件</h3>
<h4 id="1-创建镜像">1、创建镜像</h4>
<p>打开VMOS，点击“+”号，按照图示，创建<strong>64位的镜像</strong>（微信必须在64位的环境下才能运行）</p>
<figure data-type="image" tabindex="7"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Snipaste_2021-11-05_20-38-00.png" alt="Snipaste_2021-11-05_20-38-00" loading="lazy"></figure>
<h4 id="2-导入相关文件">2、导入相关文件</h4>
<p>打开VMOS，进入上面创建的镜像中</p>
<p>按照图示，导入step1中导出的系统证书以及后续需要用的软件：微信、ES文件浏览器</p>
<p>1）打开文件传输</p>
<figure data-type="image" tabindex="8"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Snipaste_2021-11-05_20-47-23.png" alt="Snipaste_2021-11-05_20-47-23" loading="lazy"></figure>
<p>2）选择“我要导入”</p>
<figure data-type="image" tabindex="9"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Snipaste_2021-11-05_20-47-31.png" alt="Snipaste_2021-11-05_20-47-31" loading="lazy"></figure>
<p>3）导入证书</p>
<figure data-type="image" tabindex="10"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Snipaste_2021-11-05_20-48-04.png" alt="Snipaste_2021-11-05_20-48-04" loading="lazy"></figure>
<p>4）导入ES文件浏览器</p>
<figure data-type="image" tabindex="11"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Snipaste_2021-11-05_20-48-28.png" alt="Snipaste_2021-11-05_20-48-28" loading="lazy"></figure>
<p>5）导入微信</p>
<figure data-type="image" tabindex="12"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Snipaste_2021-11-05_20-48-37.png" alt="Snipaste_2021-11-05_20-48-37" loading="lazy"></figure>
<h4 id="3-复制证书到目标文件夹使其生效">3、复制证书到目标文件夹使其生效</h4>
<p>在虚拟机中，打开<code>ES文件浏览器</code>，将导入的系统证书复制到系统证书生效的目录，使其生效，具体步骤如下</p>
<p>1）找到刚刚导入的系统证书（导入地址在<code>VMOSfiletransferstation</code>这个文件夹中）：</p>
<figure data-type="image" tabindex="13"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Snipaste_2021-11-05_20-58-48.png" alt="Snipaste_2021-11-05_20-58-48" loading="lazy"></figure>
<figure data-type="image" tabindex="14"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Snipaste_2021-11-05_20-59-36.png" alt="Snipaste_2021-11-05_20-59-36" loading="lazy"></figure>
<p>2）复制这个系统证书到<code>/system/etc/secrity/cacerts/</code>目录下</p>
<figure data-type="image" tabindex="15"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Snipaste_2021-11-05_21-00-09.png" alt="Snipaste_2021-11-05_21-00-09" loading="lazy"></figure>
<p>3）粘贴到图示目录下：<code>/system/etc/secrity/cacerts/</code></p>
<figure data-type="image" tabindex="16"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Snipaste_2021-11-05_21-01-55.png" alt="Snipaste_2021-11-05_21-01-55" loading="lazy"></figure>
<h2 id="0x03-检验成果">0x03 检验成果</h2>
<p>虚拟机中，登录微信并打开小程序</p>
<p>真机中，小黄鸟中选择仅抓取VMOS Pro，开启抓取，即可</p>
<p>1、点击设置</p>
<figure data-type="image" tabindex="17"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Snipaste_2021-11-05_21-06-58.png" alt="Snipaste_2021-11-05_21-06-58" loading="lazy"></figure>
<p>2、点击目标应用</p>
<figure data-type="image" tabindex="18"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Snipaste_2021-11-05_21-07-21.png" alt="Snipaste_2021-11-05_21-07-21" loading="lazy"></figure>
<p>3、选择VMOS</p>
<figure data-type="image" tabindex="19"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Snipaste_2021-11-05_21-07-32.png" alt="Snipaste_2021-11-05_21-07-32" loading="lazy"></figure>
<p>4、选择后的样子</p>
<figure data-type="image" tabindex="20"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Snipaste_2021-11-05_21-07-38.png" alt="Snipaste_2021-11-05_21-07-38" loading="lazy"></figure>
<p>5、点击小飞机，开始抓包吧</p>
<figure data-type="image" tabindex="21"><img src="https://xssong17.github.io/post-images/%E5%AE%89%E5%8D%9311%E6%89%8B%E6%9C%BA%E9%9D%9Eroot%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%EF%BC%88vmos+HttpCanary%EF%BC%89/Snipaste_2021-11-05_21-07-56.png" alt="Snipaste_2021-11-05_21-07-56" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Gridea同步失败解决办法]]></title>
        <id>https://xssong17.github.io/post/gridea-geng-xin-shi-bai-jie-jue-ban-fa/</id>
        <link href="https://xssong17.github.io/post/gridea-geng-xin-shi-bai-jie-jue-ban-fa/">
        </link>
        <updated>2021-10-19T10:21:55.000Z</updated>
        <content type="html"><![CDATA[<h1 id="gridea同步失败解决办法">Gridea同步失败解决办法</h1>
<h2 id="0x01更新最新的客户端推荐">0x01更新最新的客户端（推荐）</h2>
<pre><code>https://github.com/EryouHao/gridea-test-install/releases/tag/1.0
</code></pre>
<h2 id="0x02-更改本地hosts文件">0x02 更改本地hosts文件</h2>
<p>1、访问站长之家，寻找可以使用的ip</p>
<pre><code>http://ping.chinaz.com/github.com
</code></pre>
<p>2、修改本地hosts文件</p>
<pre><code>C:\Windows\System32\drivers\etc
</code></pre>
<p>3、末尾添加</p>
<pre><code>ip github.com
</code></pre>
<p>保存即可</p>
<p>ps：该方法再同步时也有可能失败，可能为网络波动，多试一两次即可</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[常见linux命令（个人使用、不定时更新）]]></title>
        <id>https://xssong17.github.io/post/chang-jian-linux-ming-ling-ge-ren-shi-yong-bu-ding-shi-geng-xin/</id>
        <link href="https://xssong17.github.io/post/chang-jian-linux-ming-ling-ge-ren-shi-yong-bu-ding-shi-geng-xin/">
        </link>
        <updated>2021-10-19T10:16:24.000Z</updated>
        <content type="html"><![CDATA[<h1 id="常见linux命令个人使用-不定时更新">常见linux命令（个人使用、不定时更新）</h1>
<h2 id="linux">linux</h2>
<h3 id="防火墙">防火墙</h3>
<p>开启防火墙的某个端口</p>
<pre><code>firewall-cmd --zone=public --add-port=5212/tcp --permanent
</code></pre>
<p>重启防火墙</p>
<pre><code>firewall-cmd --reload
</code></pre>
<p>列出当前使用的端口</p>
<pre><code>firewall-cmd --list-ports
</code></pre>
<p>系统开启防火墙</p>
<pre><code>systemctl start firewalld
</code></pre>
<h3 id="centos换源">centos换源</h3>
<p>https://morn-zh.github.io/post/centos-huan-yuan-yi-ji-dockerdocker-compose-an-zhuang/</p>
<h2 id="windows">windows</h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[cloudreve云盘安装指南]]></title>
        <id>https://xssong17.github.io/post/cloudreve-yun-pan-an-zhuang-zhi-nan/</id>
        <link href="https://xssong17.github.io/post/cloudreve-yun-pan-an-zhuang-zhi-nan/">
        </link>
        <updated>2021-10-19T09:44:17.000Z</updated>
        <content type="html"><![CDATA[<h1 id="cloudreve云盘安装指南">cloudreve云盘安装指南</h1>
<h2 id="1-安装docker">1、安装docker</h2>
<p>略</p>
<h2 id="2-安装cloudreve的镜像">2、安装cloudreve的镜像</h2>
<pre><code>docker pull xavierniu/cloudreve
</code></pre>
<h2 id="3-创建需要的文件夹文件">3、创建需要的文件夹/文件</h2>
<ul>
<li>
<p>创建文件夹</p>
<pre><code>mkdir -p /cloudreve/uploads
</code></pre>
<pre><code>mkdir -p /cloudreve/config
</code></pre>
<pre><code>mkdir -p /cloudreve/db
</code></pre>
<pre><code>mkdir -p /cloudreve/avatar
</code></pre>
</li>
<li>
<p>创建配置文件</p>
<pre><code>vim /cloudreve/config/conf.ini
</code></pre>
<pre><code>[Database]
DBFile = /cloudreve/db/cloudreve.db
</code></pre>
</li>
</ul>
<h2 id="4-运行镜像">4、运行镜像</h2>
<pre><code>docker run -d \
  --name cloudreve \
  -e PUID=0 \
  -e PGID=0 \
  -e TZ=&quot;Asia/Shanghai&quot; \
  -p 5212:5212 \
  --restart=unless-stopped \
  -v /cloudreve/uploads:/cloudreve/uploads \
  -v /cloudreve/config:/cloudreve/config \
  -v /cloudreve/db:/cloudreve/db \
  -v /cloudreve/avatar:/cloudreve/avatar \
  xavierniu/cloudreve
</code></pre>
<p>ps：其中 PUID 和 PGID是通过<code>id root</code>命令获取，一般root用户是0，不需要更改上述命令，直接复制即可</p>
<h2 id="5-查看初始密码">5、查看初始密码</h2>
<pre><code>docker logs -f cloudreve
</code></pre>
<h2 id="6-修改密码">6、修改密码</h2>
<p><strong>浏览器访问</strong>，登录网盘的管理界面</p>
<pre><code>ip:5212/admin
</code></pre>
<p>找到用户修改即可</p>
<h2 id="7-修改配置信息">7、修改配置信息</h2>
<p><strong>浏览器访问</strong>，要求当前处于管理员登录状态（如若未登录，先登录管理员账号再访问如下网址）</p>
<pre><code>ip:5212/admin/basic
</code></pre>
<p>将站点url修改为<code>http://ip:port</code></p>
<p>保存即可</p>
<h2 id="8-开始使用吧">8、开始使用吧</h2>
<pre><code>ip:5212
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何将clash设置为linux的系统代理]]></title>
        <id>https://xssong17.github.io/post/ru-he-jiang-clash-she-zhi-wei-linux-de-xi-tong-dai-li/</id>
        <link href="https://xssong17.github.io/post/ru-he-jiang-clash-she-zhi-wei-linux-de-xi-tong-dai-li/">
        </link>
        <updated>2021-10-19T09:41:25.000Z</updated>
        <content type="html"><![CDATA[<h1 id="如何将clash设置为linux的系统代理">如何将clash设置为linux的系统代理</h1>
<h2 id="0x01-下载客户端">0x01 下载客户端</h2>
<p>1、在用户目录下创建 clash 文件夹</p>
<pre><code>cd &amp;&amp; mkdir clash
</code></pre>
<p>2、进入新建的目录下</p>
<pre><code>cd ~/clash
</code></pre>
<p>3、下载客户端并放到<code>~/clash</code>目录下</p>
<p>下载地址：https://github.com/Dreamacro/clash/releases</p>
<p>4、解压下载的压缩包文件</p>
<pre><code>gunzip xxx.gz
</code></pre>
<p>5、将解压出来的文件重命名为clash</p>
<pre><code>mv xxx clash
</code></pre>
<p>6、下载配置文件<code>config.yaml</code>，一般由商家提供</p>
<figure data-type="image" tabindex="1"><img src="https://xssong17.github.io/post-images/linux%E5%B0%86clash%E8%AE%BE%E7%BD%AE%E4%B8%BA%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%90%86/Snipaste_2021-10-17_22-06-55.png" alt="Snipaste_2021-10-17_22-06-55" loading="lazy"></figure>
<p>ps：上图中的<code>Country.mmdb</code>，是后续启动代理时自动生成的</p>
<h2 id="0x02-将clash设置为本地代理">0x02 将clash设置为本地代理</h2>
<p>1、编辑<code>~/.bashrc</code></p>
<pre><code>vim ~/.bashrc
</code></pre>
<p>2、添加如下代码</p>
<pre><code>export http_proxy=&quot;http://127.0.0.1:7890&quot;
export https_proxy=&quot;http://127.0.0.1:7890&quot;
</code></pre>
<p>以上都为默认端口</p>
<p>3、更新设置</p>
<pre><code>source ~/.bashrc
</code></pre>
<p>0x03 启动代理</p>
<pre><code>./clash -d .
</code></pre>
<p>运行时如果出现对应端口被占用，杀掉端口的服务即可</p>
<pre><code>kill $(lsof -i:9090|awk '{if(NR==2)print $2}')
</code></pre>
<h2 id="0x03-控制面板操控可选">0x03 控制面板操控（可选）</h2>
<p>1、访问网址：http://clash.razord.top</p>
<p>访问后，会自动弹出窗口，要求输入ip，端口，秘钥</p>
<p>2、输入在<code>config.yaml</code>中的端口以及秘钥（端口默认为9090，秘钥默认为空）</p>
<p>如果无法访问，试着关闭下防火墙或者查看下服务器的安全组是否开放对应端口（9090）</p>
<pre><code>systemctl stop firewalld
</code></pre>
]]></content>
    </entry>
</feed>